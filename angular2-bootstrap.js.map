{"version":3,"sources":["webpack:///./components/typeahead/ng2-typeahead.ts","webpack:///./ng2-typeahead.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzyMAAwM,yEAAyE,gyBAAgyB,6DAA6D,KAAK,+BAA+B;AAClpC,yCAAwC,2BAA2B,oBAAoB,yBAAyB,4BAA4B,8BAA8B,OAAO,0BAA0B,kCAAkC,2BAA2B,oBAAoB,sCAAsC,qCAAqC,wCAAwC,mCAAmC,OAAO,wCAAwC,kCAAkC,kCAAkC,uBAAuB,OAAO,8BAA8B,kCAAkC,2BAA2B,mBAAmB,0BAA0B,6CAA6C,OAAO,gCAAgC,2BAA2B,kBAAkB,yBAAyB,uBAAuB,2BAA2B,mBAAmB,kCAAkC,oBAAoB,oCAAoC,kCAAkC,qBAAqB,OAAO,mCAAmC,8BAA8B,wBAAwB,wBAAwB,OAAO,sCAAsC,gCAAgC,yBAAyB,yCAAyC,OAAO,sCAAsC,kCAAkC,uBAAuB,OAAO,sCAAsC,6CAA6C,OAAO;AACzgD;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;AACD;;;;;;;;ACxOA;AACA;AACA;AACA;AACA","file":"angular2-bootstrap.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar Typeahead = (function () {\n    function Typeahead() {\n        this.list = [];\n        this.placeholder = '';\n        this.searchProperty = 'name';\n        this.displayProperty = 'name';\n        this.maxSuggestions = -1;\n        this.suggestionSelected = new core_1.EventEmitter();\n        this.suggestions = [];\n        this.areSuggestionsVisible = false;\n    }\n    Typeahead.prototype.ngOnInit = function () {\n    };\n    Typeahead.prototype.inputKeyDown = function (event) {\n        if (event.which === 9 || event.keyCode === 9) {\n            if (!this.areSuggestionsVisible) {\n                return;\n            }\n            this.selectSuggestion(this.activeSuggestion);\n            this.suggestions.splice(1);\n            this.areSuggestionsVisible = false;\n            event.preventDefault();\n        }\n        else if (event.which === 38 || event.keyCode === 38) {\n            var activeSuggestionIndex = this.getActiveSuggestionIndex();\n            if (activeSuggestionIndex === -1) {\n                this.setActiveSuggestion(this.suggestions[0]);\n                return;\n            }\n            if (activeSuggestionIndex === 0) {\n                this.setActiveSuggestion(this.suggestions[this.suggestions.length - 1]);\n            }\n            else {\n                this.setActiveSuggestion(this.suggestions[activeSuggestionIndex - 1]);\n            }\n        }\n        else if (event.which === 40 || event.keyCode === 40) {\n            var activeSuggestionIndex = this.getActiveSuggestionIndex();\n            if (activeSuggestionIndex === -1) {\n                this.setActiveSuggestion(this.suggestions[0]);\n                return;\n            }\n            if (activeSuggestionIndex === (this.suggestions.length - 1)) {\n                this.setActiveSuggestion(this.suggestions[0]);\n            }\n            else {\n                this.setActiveSuggestion(this.suggestions[activeSuggestionIndex + 1]);\n            }\n        }\n        else if ((event.which === 10 || event.which === 13 ||\n            event.keyCode === 10 || event.keyCode === 13) &&\n            this.areSuggestionsVisible) {\n            this.selectSuggestion(this.activeSuggestion);\n            this.areSuggestionsVisible = false;\n            event.preventDefault();\n        }\n    };\n    Typeahead.prototype.setActiveSuggestion = function (suggestion) {\n        this.activeSuggestion = suggestion;\n        this.populateTypeahead();\n    };\n    Typeahead.prototype.getActiveSuggestionIndex = function () {\n        var activeSuggestionIndex = -1;\n        if (this.activeSuggestion != null) {\n            activeSuggestionIndex = this.indexOfObject(this.suggestions, this.searchProperty, this.activeSuggestion[this.searchProperty]);\n        }\n        return activeSuggestionIndex;\n    };\n    Typeahead.prototype.indexOfObject = function (array, property, value) {\n        if (array == null || array.length === 0)\n            return -1;\n        var index = -1;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i][property] != null && array[i][property] === value) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Typeahead.prototype.inputKeyUp = function (event) {\n        if (event.which === 9 || event.keyCode === 9 ||\n            event.which === 38 || event.keyCode === 38 ||\n            event.which === 40 || event.keyCode === 40) {\n            return;\n        }\n        if (this.input == null || this.input.length === 0) {\n            this.typeahead = '';\n            this.populateSuggestions();\n            return;\n        }\n        if (this.selectedSuggestion != null) {\n            if (this.selectedSuggestion[this.displayProperty] === this.input) {\n                return;\n            }\n        }\n        if (this.input !== this.previousInput) {\n            this.previousInput = this.input;\n            this.populateSuggestions();\n            this.populateTypeahead();\n        }\n    };\n    Typeahead.prototype.inputFocus = function (event) {\n        if (this.selectedSuggestion != null) {\n            this.selectSuggestion(null);\n            this.input = null;\n            this.populateTypeahead();\n        }\n        this.populateSuggestions();\n        if (this.suggestions.length > 0) {\n            this.populateTypeahead();\n            this.areSuggestionsVisible = this.suggestions.length > 0;\n        }\n    };\n    Typeahead.prototype.inputBlur = function (event) {\n        this.typeahead = '';\n        this.areSuggestionsVisible = false;\n    };\n    Typeahead.prototype.suggestionMouseOver = function (suggestion) {\n        this.setActiveSuggestion(suggestion);\n    };\n    Typeahead.prototype.suggestionMouseDown = function (suggestion) {\n        this.selectSuggestion(suggestion);\n    };\n    Typeahead.prototype.suggestionsMouseOut = function (event) {\n        this.setActiveSuggestion(null);\n    };\n    Typeahead.prototype.populateSuggestions = function () {\n        var searchProperty = this.searchProperty;\n        var input = this.input;\n        if (searchProperty == null || searchProperty.length === 0) {\n            console.error('The input attribute `searchProperty` must be provided');\n            return;\n        }\n        if (input == null || input.length === 0) {\n            this.suggestions = [];\n            this.areSuggestionsVisible = false;\n            return;\n        }\n        if (this.list == null || this.list.length === 0)\n            return;\n        this.suggestions = this.list.filter(function (item) {\n            return item[searchProperty].toLowerCase().indexOf(input.toLowerCase()) > -1;\n        });\n        if (this.maxSuggestions > -1) {\n            this.suggestions = this.suggestions.slice(0, this.maxSuggestions);\n        }\n        if (this.suggestions.length === 0) {\n            this.typeahead = '';\n        }\n        else {\n            this.populateTypeahead();\n            this.activeSuggestion = this.suggestions[0];\n        }\n        this.areSuggestionsVisible = this.suggestions.length > 0;\n    };\n    Typeahead.prototype.populateTypeahead = function () {\n        if (this.activeSuggestion == null || !this.areSuggestionsVisible) {\n            this.typeahead = '';\n            return;\n        }\n        this.typeahead = this.input + (this.activeSuggestion[this.displayProperty] || '').slice(this.input.length);\n    };\n    Typeahead.prototype.selectSuggestion = function (suggestion) {\n        this.selectedSuggestion = suggestion;\n        this.areSuggestionsVisible = false;\n        this.suggestionSelected.emit(suggestion);\n        if (this.selectedSuggestion != null) {\n            this.input = suggestion[this.displayProperty];\n            this.typeahead = suggestion[this.displayProperty];\n            this.blurInputElement();\n        }\n    };\n    Typeahead.prototype.blurInputElement = function () {\n        if (this.inputElement && this.inputElement.nativeElement) {\n            this.inputElement.nativeElement.blur();\n        }\n    };\n    Typeahead.prototype.hasSelection = function () {\n        return this.selectedSuggestion != null;\n    };\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Array)\n    ], Typeahead.prototype, \"list\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], Typeahead.prototype, \"placeholder\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], Typeahead.prototype, \"searchProperty\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', String)\n    ], Typeahead.prototype, \"displayProperty\", void 0);\n    __decorate([\n        core_1.Input(), \n        __metadata('design:type', Number)\n    ], Typeahead.prototype, \"maxSuggestions\", void 0);\n    __decorate([\n        core_1.Output(), \n        __metadata('design:type', Object)\n    ], Typeahead.prototype, \"suggestionSelected\", void 0);\n    __decorate([\n        core_1.ViewChild('inputElement'), \n        __metadata('design:type', Object)\n    ], Typeahead.prototype, \"inputElement\", void 0);\n    Typeahead = __decorate([\n        core_1.Component({\n            selector: 'typeahead',\n            template: \"\\n    <div class=\\\"typeahead\\\">\\n\\n      <input #inputElement\\n        [placeholder]=\\\"placeholder\\\"\\n        [(ngModel)]=\\\"input\\\"\\n        type=\\\"text\\\"\\n        [ngClass]=\\\"{'typeahead-input': true, 'typeahead-input-has-selection': hasSelection()}\\\"\\n        typeahead=\\\"off\\\"\\n        spellcheck=\\\"false\\\"\\n        (keyup)=\\\"inputKeyUp($event)\\\"\\n        (keydown)=\\\"inputKeyDown($event)\\\"\\n        (focus)=\\\"inputFocus($event)\\\"\\n        (blur)=\\\"inputBlur($event)\\\">\\n\\n      <input type=\\\"text\\\"\\n        class=\\\"typeahead-typeahead\\\"\\n        [(ngModel)]=\\\"typeahead\\\"\\n        typeahead=\\\"off\\\"\\n        spellcheck=\\\"false\\\"\\n        disabled=\\\"true\\\">\\n\\n      <div #suggestionsContainer\\n        class=\\\"typeahead-suggestions\\\"\\n        [hidden]=\\\"!areSuggestionsVisible\\\">\\n\\n        <ul (mouseout)=\\\"suggestionsMouseOut($event)\\\">\\n\\n          <li *ngFor=\\\"let suggestion of suggestions\\\"\\n            (mouseover)=\\\"suggestionMouseOver(suggestion)\\\"\\n            (mousedown)=\\\"suggestionMouseDown(suggestion)\\\"\\n            [ngClass]=\\\"{'typeahead-suggestion-active': activeSuggestion===suggestion}\\\">{{ suggestion[displayProperty] }}</li>\\n\\n        </ul>\\n\\n      </div>\\n\\n    </div>\\n    \",\n            styles: [\"\\n    .typeahead {\\n      position: relative;\\n      width: 100%;\\n      text-align: left;\\n      vertical-align: top;\\n      padding-bottom: 2.5em;\\n    }\\n\\n    .typeahead-input {\\n      border-color: transparent;\\n      position: absolute;\\n      z-index: 10;\\n      background-color: transparent;\\n      background-repeat: no-repeat;\\n      background-position: right 10px;\\n      background-size: 28px 18px;\\n    }\\n\\n    .typeahead-input-has-selection {\\n      background-color: #f5f5f5;\\n      border: 1px solid #4c4845;\\n      color: #008fca;\\n    }\\n\\n    .typeahead-typeahead {\\n      color: rgb(128, 128, 128);\\n      position: absolute;\\n      z-index: 5;\\n      text-align: start;\\n      background-color: rgb(255, 255, 255);\\n    }\\n\\n    .typeahead-suggestions {\\n      position: absolute;\\n      top: 42px;\\n      overflow-y: auto;\\n      color: #666666;\\n      border-radius: 3px;\\n      padding: 0;\\n      background-color: #f5f5f5;\\n      width: 100%;\\n      max-height: 18em !important;\\n      border: 1px solid #e0e0e0;\\n      z-index: 100;\\n    }\\n\\n    .typeahead-suggestions ul {\\n      list-style-type: none;\\n      padding-left: 0;\\n      margin-top: 3px;\\n    }\\n\\n    .typeahead-suggestions ul li {\\n      padding: 6px !important;\\n      font-size: 0.9em;\\n      border-bottom: 1px solid #e0e0e0;\\n    }\\n\\n    .typeahead-suggestion-active {\\n      background-color: #008fca;\\n      color: #ffffff;\\n    }\\n\\n    .typeahead-active-suggestion {\\n      background-color: #008fca !important;\\n    }\\n    \"],\n            directives: common_1.FORM_DIRECTIVES.concat(common_1.COMMON_DIRECTIVES, common_1.CORE_DIRECTIVES),\n            providers: []\n        }), \n        __metadata('design:paramtypes', [])\n    ], Typeahead);\n    return Typeahead;\n}());\nexports.Typeahead = Typeahead;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./components/typeahead/ng2-typeahead.ts\n ** module id = 176\n ** module chunks = 1\n **/","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./components/typeahead/ng2-typeahead'));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./ng2-typeahead.ts\n ** module id = 177\n ** module chunks = 1\n **/"],"sourceRoot":""}